% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/single-sample-scoring-methods.R
\name{eigenWeightedMean}
\alias{eigenWeightedMean}
\title{Single sample gene set score by a weighted average of the genes in geneset}
\usage{
eigenWeightedMean(x, eigengene = 1L, center = TRUE, scale = TRUE,
  uncenter = center, unscale = scale, retx = FALSE, weights = NULL, ...)
}
\arguments{
\item{x}{An expression matrix of genes x samples. When using this to score
geneset activity, you want to reduce the rows of \code{x} to be only the
genes from the given gene set.}

\item{eigengene}{the PC used to extract the gene weights from}

\item{center}{center and/or scale data before scoring?}

\item{scale}{center and/or scale data before scoring?}

\item{uncenter}{uncenter and unscale the data data on the way out?
Defaults to the respective values of \code{center} and \code{scale}}

\item{unscale}{uncenter and unscale the data data on the way out?
Defaults to the respective values of \code{center} and \code{scale}}

\item{retx}{Works the same as `retx` from \code{\link[stats]{prcomp}}. If
\code{TRUE}, will return a \code{ret$pca$x} matrix that has the rotated
variables.}

\item{weights}{a user can pass in a prespecified set of waits using a named
numeric vector. The names must be a superset of \code{rownames(x)}. If
this is \code{NULL}, we calculate the "eigenweights".}
}
\value{
A list of useful transformation information. The caller is likely
  most interested in the \code{$score} vector, but other bits related to
  the SVD/PCA decomposition are included for the ride.
}
\description{
Weights for the genes in \code{x} are calculated by the percent of which
they contribute to the principal component indicated by \code{eigengene}.
}
\details{
You will generally want the rows of the gene x sample matrix \code{x} to
be z-transformed. If it is not already, ensure that \code{center} and
\code{scale} are set to \code{TRUE}.

When uncenter and/or unscale are \code{FALSE}, it means that the scores
should be applied on the centered or scaled values, respectively.
}
\examples{
vm <- exampleExpressionSet(do.voom=TRUE)
gdb <- conform(getMSigGeneSetDb('h'), vm)
features <- featureIds(gdb, 'h', 'HALLMARK_INTERFERON_GAMMA_RESPONSE',
                       value='x.idx')
scores <- eigenWeightedMean(vm[features,])$score

## Use scoreSingleSamples to facilitate scoring of all gene sets
scores.all <- scoreSingleSamples(gdb, vm, 'ewm')
s2 <- with(subset(scores.all, name == 'HALLMARK_INTERFERON_GAMMA_RESPONSE'),
           setNames(score, sample))
all.equal(s2, scores) ## should be TRUE
}
\seealso{
scoreSingleSamples
}
