% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/GeneSetDb-methods.R,
%   R/MultiGSEAResult-methods.R
\docType{methods}
\name{featureIds}
\alias{featureIds}
\alias{featureIds,GeneSetDb-method}
\alias{featureIds,MultiGSEAResult-method}
\title{Returns the relevant featureIds for a given geneset.}
\usage{
featureIds(x, i, j, value = c("featureId", "x.id", "x.idx"),
  active.only = is.conformed(x), ...)

\S4method{featureIds}{GeneSetDb}(x, i, j, value = c("featureId", "x.id",
  "x.idx"), active.only = is.conformed(x), ...)

\S4method{featureIds}{MultiGSEAResult}(x, i, j, value = c("featureId",
  "x.id", "x.idx"), active.only = TRUE, ...)
}
\arguments{
\item{x}{Object to retrieve the gene set from, either a \code{GeneSetDb} or
a \code{MultiGSEAResult}.}

\item{i, j}{The collection,name compound key identifier of the gene set}

\item{value}{What form do you want the id's in?
\describe{
  \item{featureId}{the IDs used in the original geneset definitions}
  \item{x.id}{the ids of the features as they are used in the expression
        object}
  \item{x.idx}{The integer index into the expresion object \code{x} that
        the GeneSetDb has been conformed to.}
}}

\item{active.only}{only look for gene sets that are "active"? Defaults to
\code{TRUE} if \code{x} is conformed to a target expression object, else
\code{FALSE}. See \code{\link{conform}} for further details.}
}
\value{
A vector of identifiers (or indexes into an expression object,
  depending on the \code{value} argument) for the features in the specified
  geneset. NA is returned if the geneset is not "active" (ie. listed in
  geneSets(x))
}
\description{
Gene sets are defined by the unique compound key consisting of their
\code{collection} and \code{name}. To fetch the featureIds associated with
a specific geneset, you must provide values for \code{i} and \code{j}. If
these are missing, then a character vector of all the unique feature ids
within \code{x} are returned.

If the GeneSetDb \code{x} has been conformed to an expression object this
will default to return only the featureId's that are matched to the target
expression object, and they will be returned using the same identifiers that
the target expression object uses. To change this behavior, tweak the values
for the \code{activee.only} and \code{value} parameters, respectively.

\code{x} can be either a \code{GeneSetDb} or a \code{MultiGSEAResult}. If
its the latter, then this call simply delegates to the internal
\code{GeneSetDb}.
}
\examples{
gdb <- exampleGeneSetDb()
fids.gs <- featureIds(gdb, 'c2', 'BIOCARTA_AGPCR_PATHWAY')
fids.c2 <- featureIds(gdb, 'c2')
fids.all <- featureIds(gdb)

vm <- exampleExpressionSet(do.voom=TRUE)
gdb <- conform(gdb, vm)
## fewer than before
fids.gs2 <- featureIds(gdb, 'c2', 'BIOCARTA_AGPCR_PATHWAY')
## same as before
fids.gs3 <- featureIds(gdb, 'c2', 'BIOCARTA_AGPCR_PATHWAY', active.only=FALSE)
## returned as row indices into vm
fids.idxs <- featureIds(gdb, 'c2', value='x.idx')
}
